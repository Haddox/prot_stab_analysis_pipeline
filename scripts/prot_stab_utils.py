"""
Functions related to analysis of data from the high-throughput protein-stability assay
"""

import os
import pandas
import numpy as np
import doctest

def compute_min_stability_score(x, y):
    """
    Compute the minimum stability score between two input values
    
    Args:
        `x` and `y`: input stability scores (float or `nan`)
        
    Returns:
        The minumum of `x` and `y` if both are floats. Otherwise, `nan` if either `x` or `y` is `nan`.
    """
    if np.isnan(x) or np.isnan(y):
        return np.nan
    else:
        return min(x, y)

def merge_stability_scores_between_proteases(stability_scores_trypsin_file, stability_scores_chymotrypsin_file, outfile):
    """
    Merge files of stability scores between trypsin and chymotrypsin and compute a minimum stability score between them
    
    Args:
        `stability_scores_trypsin_file`: the path to a file containing stability scores computed for
            trypsin, in the format as the one generated by the pipeline in this repository.
        `stability_scores_chymotrypsin_file`: the path to a file containing stability scores comptued
            for chymotrypsin, in the same format as above.
        `outfile`: the path to a file that will be created with merged data
    
    Returns: An output file called `outfile` that merges two files with stability data from trypsin and
        chymotrypsin. Columns from the trypsin file will be distinguised by a `_t` suffix, while columns
        from the chymotrypsin file will be distinguished by a `_c` suffix. This function will also compute
        the minimum stability score between the two proteases, reporting this value as the column
        `stabilityscore`.
    """
    
    # Read in data for each protease, making the `name` column the index
    # in each case
    trypsin_df = pandas.read_csv(stability_scores_trypsin_file, sep='\t')
    chymotrypsin_df = pandas.read_csv(stability_scores_chymotrypsin_file, sep='\t')
    trypsin_df.set_index('name', inplace=True)
    chymotrypsin_df.set_index('name', inplace=True)

    # Merge the dataframes, using `_t` and `_c` as suffixes to indicate
    # which data is from trypsin and chymotrypsin, respectively
    stability_scores_df = trypsin_df.merge(
        chymotrypsin_df,
        left_index=True,
        right_index=True,
        how='outer',
        suffixes=['_t', '_c']
    )
    stability_scores_df['stabilityscore'] = stability_scores_df.apply(
        lambda row: compute_min_stability_score(row['stabilityscore_t'], row['stabilityscore_c']), axis=1
    )
    
    # Write the resulting dataframe to an output file
    stability_scores_df.to_csv(outfile, sep='\t')
    

if __name__ == '__main__':
    doctest.testmod()